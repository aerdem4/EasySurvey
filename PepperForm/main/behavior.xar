<?xml version="1.0" encoding="UTF-8" ?>
<ChoregrapheProject xmlns="http://www.aldebaran-robotics.com/schema/choregraphe/project.xsd" xar_version="3">
    <Box name="root" id="-1" localization="8" tooltip="Root box of Choregraphe&apos;s behavior. Highest level possible." x="0" y="0">
        <bitmap>media/images/box/root.png</bitmap>
        <script language="4">
            <content>
                <![CDATA[]]>
</content>
        </script>
        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
        <Timeline enable="0">
            <BehaviorLayer name="behavior_layer1">
                <BehaviorKeyframe name="keyframe1" index="1">
                    <Diagram>
                        <Box name="GFDialog" id="1" localization="8" tooltip="" x="281" y="201">
                            <dialogFile>../GFDialog/GFDialog.dlg</dialogFile>
                            <bitmap>media/images/box/box-dialog.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                        </Box>
                        <Box name="start service" id="2" localization="8" tooltip="" x="103" y="54">
                            <bitmap>media/images/box/box-python-script.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #put initialization code here
        pass

    def onUnload(self):
        #put clean-up code here
        serviceName = self.getParameter("service name")
        try:
            serviceManager = self.session().service('ALServiceManager')
            if serviceManager.isServiceRunning(serviceName):
                serviceManager.stopService(serviceName)
        except RuntimeError:
            self.logger.warning('error occured when trying to stop the service: ' + serviceName)

    def onInput_onStart(self):
        #self.onStopped() #activate the output of the box
        import time
        serviceName = self.getParameter("service name")
        try:
            serviceManager = self.session().service('ALServiceManager')
            if serviceManager.isServiceRunning(serviceName):
                self.onStopped()
            elif serviceManager.startService(serviceName) == True:
                time.sleep(0.3)
                if serviceManager.isServiceRunning(serviceName):
                    self.session().waitForService(serviceName)
                    self.onStopped()
            else:
                raise RuntimeError('Could not find or start the service')
        except RuntimeError:
            self.logger.error('Could not start service: ' + serviceName)

    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                            <Parameter name="service name" inherits_from_parent="0" content_type="3" value="GoogleForm" default_value="" custom_choice="0" tooltip="" id="5" />
                        </Box>
                        <Box name="GoogleForm" id="3" localization="8" tooltip="Loads and Submit forms" x="279" y="64">
                            <bitmap>../../../../../../../../Users/SBR4400773/Pictures/googleforms.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #put initialization code here
        pass

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self):
        self.url = self.getParameter("url")
        self.session().service("GoogleForm").loadForm(self.url)
        self.onFormLoaded()

    def onInput_onSubmit(self):
        if self.session().service("GoogleForm").getFormURL() == self.url:
            self.session().service("GoogleForm").submit()
        self.onStopped()

    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onSubmit" type="1" type_size="1" nature="2" inner="0" tooltip="Submits the current form" id="3" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="4" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="5" />
                            <Output name="onFormLoaded" type="1" type_size="1" nature="2" inner="0" tooltip="triggered when the form was loaded and is ready to use" id="6" />
                            <Parameter name="url" inherits_from_parent="0" content_type="3" value="https://docs.google.com/forms/d/1jzDkEha066GwSCcSrCg1yaJJLpJAk0_aIFwf6GQgmmU/viewform" default_value="" custom_choice="0" tooltip="the url of the form to use" id="7" />
                        </Box>
                        <Link inputowner="3" indexofinput="2" outputowner="2" indexofoutput="4" />
                        <Link inputowner="1" indexofinput="2" outputowner="3" indexofoutput="6" />
                        <Link inputowner="3" indexofinput="3" outputowner="1" indexofoutput="4" />
                        <Link inputowner="0" indexofinput="4" outputowner="3" indexofoutput="5" />
                        <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" />
                    </Diagram>
                </BehaviorKeyframe>
            </BehaviorLayer>
        </Timeline>
    </Box>
</ChoregrapheProject>
